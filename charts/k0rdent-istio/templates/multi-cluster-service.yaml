{{- if .Values.rootCA.enabled }}
  {{- $global := .Values.global | default dict }}
  {{- $customRegistry := "" }}
  {{- if and $global.registry (ne $global.registry "docker.io") }}
    {{- $customRegistry = $global.registry }}
  {{- end }}

apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: {{ .Release.Name }}-namespaces
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/istio-role: member
  serviceSpec:
    services:
      - name: {{ .Release.Name }}-namespaces
        namespace: {{ .Values.kcm.namespace }}
        template: k0rdent-istio-base-namespaces
---
apiVersion: k0rdent.mirantis.com/v1beta1
kind: MultiClusterService
metadata:
  name: {{ .Release.Name }}-network
spec:
  clusterSelector:
    matchLabels:
      k0rdent.mirantis.com/istio-role: member
  serviceSpec:
    {{- $version := .Chart.Version | replace "." "-" }}
    services:
      - name: cert-manager
        namespace: {{ .Release.Namespace }}
        template: {{ index .Values "cert-manager" "template" }}
        values: |
          crds:
            enabled: true
        {{- with $customRegistry }}
          image:
            repository: {{ . }}/jetstack/cert-manager-controller
          acmesolver:
            image:
              repository: {{ . }}/jetstack/cert-manager-acmesolver
          cainjector:
            image:
              repository: {{ . }}/jetstack/cert-manager-cainjector
          startupapicheck:
            image:
              repository: {{ . }}/jetstack/cert-manager-startupapicheck
          webhook:
            image:
              repository: {{ . }}/jetstack/cert-manager-webhook
        {{- end }}
      - name: k0rdent-istio
        namespace: {{ .Release.Namespace }}
        template: k0rdent-istio-{{ $version }}
        values: |
          operator:
            enabled: false
          rootCA:
            enabled: false
          intermediateCAs:
            {{ `{{ .Cluster.metadata.name }}` }}:
              namespace: {{ `{{ .Cluster.metadata.namespace }}` }}
              certificate: false
              issuer: true
            kcm-cluster:
              certificate: false
              issuer: false
          global:
          {{- with $customRegistry }}
            hub: {{ . }}/istio
          {{- end }}
            multiCluster:
              clusterName: {{ `{{ .Cluster.metadata.name }}` }}
            network: {{ `{{ .Cluster.metadata.name }}` }}-network
          cert-manager-istio-csr:
          {{- with $customRegistry }}
            image:
              repository: {{ . }}/jetstack/cert-manager-istio-csr
          {{- end }}
            app:
              certmanager:
                issuer:
                  name: k0rdent-istio-{{ `{{ .Cluster.metadata.namespace }}` }}-{{ `{{ .Cluster.metadata.name }}` }}-ca
              server:
                clusterID: {{ `{{ .Cluster.metadata.name }}` }}
{{- end }}
